for(i in 1:n_country){
print(country[i])
data <- data0[which(data0$orig_country %in% country[i]),]
# m <- glm(total_departures ~ year + month + orig_country + year:orig_country + month:orig_country, 'poisson', data = iata_table)
# m <- glm(total_departures ~ year + month + orig_country + year:orig_country + post_covid, 'poisson', data = iata_table)
m1 <- mgcv::gam(total_departures ~ year + month + post_covid  +
time_post_covid  ,
'nb', data = data)
m2 <- mgcv::gam(total_departures ~ year + month + post_covid + time_post_covid2 +
time_post_covid  ,
'nb', data = data)
y_hat1 <- mgcv::predict.gam(m1, type = "link", se.fit = TRUE)
y_hat2 <- mgcv::predict.gam(m2, type = "link", se.fit = TRUE)
pred <- data.frame( median1 = exp(y_hat1$fit),
pred_low1 = exp(y_hat1$fit + 1.96 * y_hat1$se.fit),
pred_high1 = exp(y_hat1$fit - 1.96 * y_hat1$se.fit),
median2 = exp(y_hat2$fit),
pred_low2 = exp(y_hat2$fit + 1.96 * y_hat2$se.fit),
pred_high2 = exp(y_hat2$fit - 1.96 * y_hat2$se.fit) )
data <- cbind(data, pred)
res[[i]] <- list(data= data, m1 = m1, m2 = m2)
results$MaxDecline[i] <- exp(m2$coefficients[14])
#plot
plot(data$date, data$total_departures,
pch = 16, main = country[i],
xlab = '',ylab = 'traffic', bty = 'n',ylim = c(0,1.1*max(data$total_departures)))
lines(data$date, pred$median1, col = 'red')
polygon(c(data$date, rev(data$date)),
c(pred$pred_low1, rev(pred$pred_high1)),
border = NA,col = rgb(1,0,0,.1))
lines(data$date, pred$median2, col = 'blue')
polygon(c(data$date, rev(data$date)),
c(pred$pred_low2, rev(pred$pred_high2)),
border = NA,col = rgb(0,0,1,.1))
}
par(mar=c(4,3,1,0))
layout(matrix(1:9,3,3))
results <- data.frame(country = country, MaxDecline = NA, slope1 = NA, slope2 = NA)
res <- list()
for(i in 1:n_country){
print(country[i])
data <- data0[which(data0$orig_country %in% country[i]),]
# m <- glm(total_departures ~ year + month + orig_country + year:orig_country + month:orig_country, 'poisson', data = iata_table)
# m <- glm(total_departures ~ year + month + orig_country + year:orig_country + post_covid, 'poisson', data = iata_table)
m1 <- mgcv::gam(total_departures ~ year + month + post_covid  +
time_post_covid  ,
'nb', data = data)
m2 <- mgcv::gam(total_departures ~ year + month + post_covid + time_post_covid2 +
time_post_covid  ,
'nb', data = data)
y_hat1 <- mgcv::predict.gam(m1, type = "link", se.fit = TRUE)
y_hat2 <- mgcv::predict.gam(m2, type = "link", se.fit = TRUE)
pred <- data.frame( median1 = exp(y_hat1$fit),
pred_low1 = exp(y_hat1$fit + 1.96 * y_hat1$se.fit),
pred_high1 = exp(y_hat1$fit - 1.96 * y_hat1$se.fit),
median2 = exp(y_hat2$fit),
pred_low2 = exp(y_hat2$fit + 1.96 * y_hat2$se.fit),
pred_high2 = exp(y_hat2$fit - 1.96 * y_hat2$se.fit) )
data <- cbind(data, pred)
res[[i]] <- list(data= data, m1 = m1, m2 = m2)
results$MaxDecline[i] <- exp(m2$coefficients[14])
results$slope1[i] <- exp(m2$coefficients[15])
results$slope2[i] <- exp(m2$coefficients[15]+m2$coefficients[16])
#plot
plot(data$date, data$total_departures,
pch = 16, main = country[i],
xlab = '',ylab = 'traffic', bty = 'n',ylim = c(0,1.1*max(data$total_departures)))
lines(data$date, pred$median1, col = 'red')
polygon(c(data$date, rev(data$date)),
c(pred$pred_low1, rev(pred$pred_high1)),
border = NA,col = rgb(1,0,0,.1))
lines(data$date, pred$median2, col = 'blue')
polygon(c(data$date, rev(data$date)),
c(pred$pred_low2, rev(pred$pred_high2)),
border = NA,col = rgb(0,0,1,.1))
}
write.csv(results, file = 'results_max_decline.csv')
m1 <- res[[which(country == 'Angola')]]$m1
m2 <- res[[which(country == 'Angola')]]$m2
summary(m1)
summary(m2)
# 60000*exp(m$coefficients)[14]
par(mar=c(4,3,1,0))
layout(matrix(1:9,3,3))
results <- data.frame(country = country, MaxDecline = NA, slope1 = NA, slope2 = NA)
res <- list()
for(i in 1:n_country){
print(country[i])
data <- data0[which(data0$orig_country %in% country[i]),]
# m <- glm(total_departures ~ year + month + orig_country + year:orig_country + month:orig_country, 'poisson', data = iata_table)
# m <- glm(total_departures ~ year + month + orig_country + year:orig_country + post_covid, 'poisson', data = iata_table)
m1 <- mgcv::gam(total_departures ~ year + month + post_covid  +
time_post_covid  ,
'nb', data = data)
m2 <- mgcv::gam(total_departures ~ year + month + post_covid + time_post_covid2 +
time_post_covid  ,
'nb', data = data)
y_hat1 <- mgcv::predict.gam(m1, type = "link", se.fit = TRUE)
y_hat2 <- mgcv::predict.gam(m2, type = "link", se.fit = TRUE)
pred <- data.frame( median1 = exp(y_hat1$fit),
pred_low1 = exp(y_hat1$fit + 1.96 * y_hat1$se.fit),
pred_high1 = exp(y_hat1$fit - 1.96 * y_hat1$se.fit),
median2 = exp(y_hat2$fit),
pred_low2 = exp(y_hat2$fit + 1.96 * y_hat2$se.fit),
pred_high2 = exp(y_hat2$fit - 1.96 * y_hat2$se.fit) )
data <- cbind(data, pred)
res[[i]] <- list(data= data, m1 = m1, m2 = m2)
results$MaxDecline[i] <- exp(m2$coefficients[14])
results$slope1[i] <- (m2$coefficients[15])
results$slope2[i] <- (m2$coefficients[15]+m2$coefficients[16])
#plot
plot(data$date, data$total_departures,
pch = 16, main = country[i],
xlab = '',ylab = 'traffic', bty = 'n',ylim = c(0,1.1*max(data$total_departures)))
lines(data$date, pred$median1, col = 'red')
polygon(c(data$date, rev(data$date)),
c(pred$pred_low1, rev(pred$pred_high1)),
border = NA,col = rgb(1,0,0,.1))
lines(data$date, pred$median2, col = 'blue')
polygon(c(data$date, rev(data$date)),
c(pred$pred_low2, rev(pred$pred_high2)),
border = NA,col = rgb(0,0,1,.1))
}
par(mar=c(4,3,1,0))
layout(matrix(1:9,3,3))
results <- data.frame(country = country, MaxDecline = NA, slope1 = NA, slope2 = NA)
res <- list()
for(i in 1:n_country){
33*5000
sqrt(1220^2+1220^2)
sqrt(1220^2+1220^2)/2
vignette("colwise", package="dplyr")
seq(1,8)
perm(seq(1,8))
permute(seq(1,8))
sample(x)
x=seq(1,8)
sample(x)
x=seq(2,8)
sample(x)
x=rep(seq(2,4),2)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
sample(x)
r=1.1
r=0.5
x=1:10
i0=10
i0*exp(x*r)
mark<-function(x,y){return(x*.8+y*.2)}
mark(75,80)
mark(60,70)
mark(65,70)
mark(68,90)
mark(72,90)
mark(68,85)
mark(80,90)
mark(70,85)
mark(68,80)
mark(85,95)
mark(65,75)
mark(78,90)
mark(80,95)
mark(82,95)
mark(83,95)
8/4
plot(1:3,1:3)
plot(1:3,1:3,type='l')
plot(1:3,c(1,3,2),type='l')
setwd("//smbhome.uscs.susx.ac.uk/pn211/Documents/GitHub/Rtglm")
devtools::load_all(\.)
devtools::load_all()
devtools::load_all(".")
k_basis <- min(c(k_basis*2,sum(!is.na(data_infer$Oi))-1))
